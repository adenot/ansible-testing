#!/usr/bin/python
# -*- coding: utf-8 -*-

# (c) 2014, Will Thames <will@thames.id.au>
#
# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.


DOCUMENTATION = '''
---
module: assert
version_added: 1.5
short_description: Asserts that a condition is true
description:
  - Asserts that a condition is true
options: 
  condition: 
    description:
    - a condition to evaluate
    required: True
    default: null
  failure_msg:
    description:
    - failure message to report
    required: True
    default: null
author: Will Thames
'''

EXAMPLES = '''
# Check if number of cpus is 2
assert: condition="{{ansible_processor_count}}==2" failure_msg="Number of cpus is {{ansible_processor_count}}, expecting 2"
'''

from ast import literal_eval

def main():
    module = AnsibleModule(
        argument_spec = dict(
            condition=dict(type='str', required=True, default=None),
            failure_msg=dict(type='str', required=True, default=None),
        )
    )
    condition = module.params.get('condition')
    failure_msg = module.params.get('failure_msg')

    # eval is evil but ansible has the same privileges as the person running it
    # so it's hardly untrusted input. ast.literal_eval does not work for 
    # ast.Compare objects - i.e. pretty much all expected uses of this module!
    if eval(condition, {}): 
        module.exit_json()
    else:
        module.fail_json(msg=failure_msg)

from ansible.module_utils.basic import *

main()

